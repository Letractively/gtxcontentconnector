#labels Usage
= Introduction =

A request to a content connector component can be done via three methods

    * via ContentID
    * via Filterrule
    * via Beautiful URL


== Via ContentID ==
You get a result via a ContentID. This is determined and you receive one object.

This call delivers an object with the ContentID 90033.305.

?contentid=90033.305


== Via Filterrule ==
If you want to request more results, you can use a filterrule.

How you can create such a rule and what operators you can use, can be read in the following pages:

» [http://www.gentics.com/help/topic/com.gentics.portalnode.sdk.doc/misc/doc/reference/xhtml/ch04s10.html?resultof=%22%45%78%70%72%65%73%73%69%6f%6e%70%61%72%73%65%72%22%20%22%65%78%70%72%65%73%73%69%6f%6e%70%61%72%22%20 GenticsHelpExpressionParser]

» [http://www.gentics.com/help/topic/com.gentics.portalnode.sdk.doc/misc/doc/reference/xhtml/ref-implementation-rules.html GenticsHelpRules]

This call delivers objects of the type 90033.

?filter=object.obj_type==90033

If you use this component in Gentics Portal.Node as a GenticsPortlet, you can use all portal variables in the rules.

With the following rule you can personalize content for a portal user.

((object.public == 1) || (object.permissions CONTAINSONEOF portal.user.systemrole))


== via Beautiful URL ==
If you request an object via a beautiful URL the publishing path will be used to find the right object.

In this example request the Content Connector Servlet with the name cc_servlet uses the publishing path /home/images/ to find a file called start.jpg.

http://yourserver.com/cc_servlet/home/images/start.jpg

== Additional parameters == 
*start*
The entry where the request should start with paging. Example start=0 (optional)

*count*
The number of results delivered. Example count=20 (optional)

*sorting*
Object for sorting and the sort order. Example sorting=obj_typ:desc,firstname:asc (optional)

*attributes*
All attributes which should be in the results. Example attributes=content&attributes=filename (optional)

*mimetypeattribute*
Attribute for defining the Mimetypes of the objects delivered. Example:  mimetypeattribute=mimetype (optional)

== Requesting content objects == 

To get a list of content objects back, getObjects() (function of requestprocessor) will executed in a way that all elements which match a certain rule will be delivered.

They can be loaded with a renderer --> see renderer. This function is in simplecontainer.

== Requesting content ===

To request content, the function getContent() of the requestprocessor is called. This function is in binarycontainer.

== Requesting hierarchies ==

To request hierarchies, getObjects() is called, so that all child elements and their children are loaded. This function is in navigationcontainer.


== Renderers == 

Currently we support 4 renderers, they render depending on the type all results and can be chosen via the parameter "type". If you do not select a type, XML is chosen.

Parameter: type

Possible values: XML, PHP, JSON, JavaXML

e.g.: ?filter=object.obj_type==90033&type=PHP

If errors occur, please read the page "known errors".

If you can't find any solution, contact us (solution@gentics.com).

