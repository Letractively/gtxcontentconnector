#Set the RequestProcessor to LuceneRequestProcessor that fetches the objects from the lucene index
rp.1.rpClass=com.gentics.cr.lucene.search.LuceneRequestProcessor
#Configure the lucene analyzers per field in the following file
rp.1.analyzerconfig=${com.gentics.portalnode.confpath}/rest/analyzer.properties
#The following line configures the main index location
rp.1.indexLocations.0.path=${com.gentics.portalnode.confpath}/index/index
#If you are using a LuceneMultiIndexLocation you can configure more than one location to search in
#rp.1.indexLocations.1.path=${com.gentics.portalnode.confpath}/index_1/index
#rp.1.indexLocations.2.path=${com.gentics.portalnode.confpath}/index_2/index
#The following line would open a index location in the system memory (this is not recommended for production environments)
#rp.1.indexLocations.3.path=RAM
#Set the class of the IndexLocation that should be used
rp.1.indexLocationClass=com.gentics.cr.lucene.indexer.index.LuceneSingleIndexLocation

##configure a custom collector (not included in content connector)
##in this case it is a collector to check the permissions of the search results
#rp.1.collectorClass=org.apache.lucene.search.PermissionsCollector
##all properties used in rp.1.collector are put into the collector config
##here we have a sample config with another custom class and an additional datasource for the permissions
#rp.1.collector.permissionCheckerClass=your.company.PermissionChecker
#rp.1.collector.permissionChecker.ds.ds-handle.type=jdbc
#rp.1.collector.permissionChecker.ds.ds-handle.driverClass=com.mysql.jdbc.Driver
#rp.1.collector.permissionChecker.ds.ds-handle.url=jdbc:mysql://127.0.0.1:3306/permissiondb?user=x&password=y

#Check if index should be reopened each search (set this to true if the index changes often)
rp.1.reopencheck=true
#idattribute: attribute that contains the identifyer in the lucene index
rp.1.idattribute=contentid
#Searched attributes: default attribute that is being searched if no other is specified
rp.1.searchedattributes=content
#Searchcount: number of hits that is returned if no other specified
rp.1.searchcount=30
#Score attribute: under which the score of each hit can be requested
rp.1.scoreattribute=score
#getstoredattributes: if this is set to true, all stored attributes are returned
rp.1.getstoredattributes=true
#Configure the highlighters (here the default PhraseBolder)
rp.1.highlighter.1.class=com.gentics.cr.lucene.search.highlight.PhraseBolder
#Set the attribute that should be highlighted
rp.1.highlighter.1.attribute=content
#Set the rule that defines the objects that should be highlighted with this highlighter
rp.1.highlighter.1.rule=1==1
#Set the max number of fragments that should be present in the highlighted text
rp.1.highlighter.1.fragments=5
#Set the max number of words a fragment should contain
rp.1.highlighter.1.fragmentsize=10
#Set the tags that should be used for highlighting
rp.1.highlighter.1.highlightprefix=<b>
rp.1.highlighter.1.highlightpostfix=</b>
#Set the seperator that should be used between the fragments
rp.1.highlighter.1.fragmentseperator=...

##Configure the highlighters (sample for VectorBolder)
##Vector Bolder needs Vectors stored in the index so check your indexer.properties
##if index.DEFAULT.CR.FILES.storeVectors is set to true (default)
#rp.1.highlighter.1.class=com.gentics.cr.lucene.search.highlight.VectorBolder
##Set the attribute that should be highlighted
#rp.1.highlighter.1.attribute=content
##Set the rule that defines the objects that should be highlighted with this highlighter
#rp.1.highlighter.1.rule=1==1
##Set the max number of fragments that should be present in the highlighted text
#rp.1.highlighter.1.fragments=5
##Set the max number of characters a fragment should contain
#rp.1.highlighter.1.fragmentsize=100
##Set the tags that should be used for highlighting
#rp.1.highlighter.1.highlightprefix=<b>
#rp.1.highlighter.1.highlightpostfix=</b>
##Set the seperator that should be used between the fragments
#rp.1.highlighter.1.fragmentseperator=...



#rp.1.highlighter.2.class=com.gentics.cr.lucene.search.highlight.PhraseBolder
#rp.1.highlighter.2.attribute=binarycontent
#rp.1.highlighter.2.rule=1==1
#rp.1.highlighter.2.fragments=5
#rp.1.highlighter.2.fragmentsize=10
#rp.1.highlighter.2.highlightprefix=<b>
#rp.1.highlighter.2.highlightpostfix=</b>
#rp.1.highlighter.2.fragmentseperator=...

#Lucene implementation doesn't support the CONTAINSONEOF attribute at the moment
#so don't add given permissions to the filter rule.
addPermissionsToRule=false
